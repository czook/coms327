
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,3118
#define distancepair(15,255
#define DUMP_HARDNESS_IMAGES 17,329
# define rand_under(21,474
# define rand_range(25,617
# define UNUSED(26,690
#define malloc(28,721
typedef struct corridor_path 34,865
  heap_node_t *hn;hn35,896
  uint8_t pos[pos36,915
  uint8_t from[from37,933
  int32_t cost;38,952
} corridor_path_t;39,968
typedef enum dim 41,988
  dim_x,42,1007
  dim_y,43,1016
  num_dims44,1025
} dim_t;45,1036
typedef int8_t pair_t[pair_t47,1046
#define DUNGEON_X 49,1080
#define DUNGEON_Y 50,1114
#define MIN_ROOMS 51,1148
#define MAX_ROOMS 52,1181
#define ROOM_MIN_X 53,1215
#define ROOM_MIN_Y 54,1248
#define ROOM_MAX_X 55,1281
#define ROOM_MAX_Y 56,1315
#define SAVE_DIR 57,1349
#define DUNGEON_SAVE_FILE 58,1390
#define DUNGEON_SAVE_SEMANTIC 59,1431
#define DUNGEON_SAVE_VERSION 60,1477
#define mappair(62,1512
#define mapxy(63,1569
#define hardnesspair(64,1604
#define hardnessxy(65,1671
typedef enum __attribute__ ((__packed__)) terrain_type 67,1717
  ter_debug,68,1774
  ter_wall,69,1787
  ter_wall_immutable,70,1799
  ter_floor,71,1821
  ter_floor_room,72,1834
  ter_floor_hall,73,1852
  ter_stairs,74,1870
  ter_stairs_up,75,1884
  ter_stairs_down76,1901
} terrain_type_t;77,1919
typedef struct room 79,1938
  pair_t position;80,1960
  pair_t size;81,1979
} room_t;82,1994
typedef struct dungeon 84,2005
  uint16_t num_rooms;85,2030
  room_t *rooms;rooms86,2052
  terrain_type_t map[map87,2069
  uint8_t hardness[hardness96,2722
  uint32_t ntmap[ntmap97,2764
	uint32_t tmap[tmap98,2804
  pair_t pc;99,2842
} dungeon_t;100,2855
static uint32_t in_room(104,2871
static uint32_t adjacent_to_room(120,3262
static uint32_t is_open_space(128,3523
static int32_t corridor_path_cmp(133,3622
static void dijkstra_corridor(137,3772
void dijkstra_tunneling_monsters(234,7302
void dijkstra_non_tunneling_monsters(361,12008
void populate_tunneling_monsters(483,16692
void populate_non_tunneling_monsters(511,17233
static void dijkstra_corridor_inv(538,17967
#define hardnesspair_inv(591,19289
static int connect_two_rooms(641,21960
static int create_cycle(660,22612
static int connect_rooms(702,24177
int gaussian[gaussian715,24370
typedef struct queue_node 723,24526
  int x,724,24554
  int x, y;724,24554
  struct queue_node *next;next725,24566
} queue_node_t;726,24593
static int smooth_hardness(728,24610
static int empty_dungeon(887,28881
static int place_rooms(906,29257
static void place_stairs(943,30444
static int make_rooms(965,31079
int gen_dungeon(988,31642
void populate_dungeon(1001,31804
void delete_dungeon(1041,32732
void init_dungeon(1046,32789
int write_dungeon_map(1051,32846
int write_rooms(1064,33075
uint16_t count_up_stairs(1086,33547
uint16_t count_down_stairs(1102,33798
int write_stairs(1118,34053
uint32_t calculate_dungeon_size(1150,34808
int makedirectory(1161,35279
int write_dungeon(1196,35915
int read_dungeon_map(1262,37452
int read_stairs(1285,38050
int read_rooms(1308,38527
int read_dungeon(1366,40453
int read_pgm(1451,42519
void usage(1536,44922
int main(1546,45132
